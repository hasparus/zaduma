:root {
  --container-width: 43rem;
  --wide-content-width: min(100vw, calc(var(--container-width) * 1.2));
}

.dont-break-out {
  /* These are technically the same, but use both */
  overflow-wrap: break-word;
  word-wrap: break-word;

  -ms-word-break: break-all;
  /* This is the dangerous one in WebKit, as it breaks things wherever */
  word-break: break-all;
  /* Instead use this non-standard one: */
  word-break: break-word;

  /* Adds a hyphen where the word breaks, if supported (No Blink) */
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}

.zaduma-prose {
  /* TODO: Get rid of thesse two and apply Tailwind styles */
  --sans: "Inter";
  --serif: "Brygada 1918";
  --italic-serif: italic 444 1.15em var(--serif);

  --block-mb: 1.5rem; /* same as Tailwind's mb-6 */

  @apply max-w-container;

  & > :not(:last-child) {
    margin-bottom: var(--block-mb);
  }

  & hr {
    @apply border-gray-100 dark:border-gray-800 border-b-2;
  }

  /* #region text — p, em, and strong */

  & p {
    @apply max-w-prose;

    line-height: 1.75;
    text-overflow: ellipsis;

    & a {
      @apply dont-break-out;
      max-width: var(--container-width);
    }
  }

  & em {
    font: var(--italic-serif);
  }

  & strong,
  & strong > em {
    font-weight: 700;
  }

  /* #endregion */

  /* #region lists */

  & ul {
    list-style-type: disc;
    list-style-position: outside;
    padding-left: 1em;

    /* nested lists are the worse */
    text-indent: 0;
  }

  & ol {
    counter-reset: ol var(--start, 0);
    list-style-type: none;
    padding: 0;

    & > li {
      text-indent: -1.5em;
      padding-left: 1.5em;

      &:before {
        @apply text-gray-600 dark:text-gray-400;

        counter-increment: ol;
        content: counter(ol) ".";
        font: var(--italic-serif);
        font-size: 1em;
        font-weight: 700;

        display: inline-flex;
        align-items: center;
        justify-content: flex-end;

        text-align: right;
        min-width: 0.75em;
        margin-right: 0.5em;
        user-select: none;
      }
    }

    & li > p {
      display: contents;
    }
  }

  /* #endregion */

  /* #region text boxes — blockquote and aside */

  /*
   * Example of blockquote with attribution:
   *
   *  <figure>
   *    <blockquote cite="https://www.huxley.net/bnw/four.html">
   *      <p>Words can be like X-rays, if you use them properly—they’ll go through anything. You read and you’re pierced.</p>
   *    </blockquote>
   *    <figcaption>
   *      —Aldous Huxley, <cite>
   *        <a href="https://www.huxley.net/bnw/four.html">
   *          Brave New World
   *        </a>
   *      </cite>
   *    </figcaption>
   *  </figure>
   */

  & blockquote {
    @apply bg-gray-100 dark:bg-gray-800 rounded-sm py-4 px-6;

    font: 444 1.15em var(--serif);

    position: relative;
    quotes: "“" "”" "‘" "’";

    &:after,
    &:before {
      @apply text-4xl leading-none text-gray-300 dark:text-gray-600 font-black;
      position: absolute;
    }

    &:before {
      content: open-quote;
      top: 0;
      left: 0;
      transform: translate(-50%, -0.5rem);
    }

    &:after {
      content: close-quote;
      bottom: 0;
      right: 0;
      transform: translate(50%, calc(50% + 0.25rem));
    }
  }

  & figure > figcaption {
    @apply px-6;
    font: italic 400 1em var(--serif);
    @apply text-gray-600 dark:text-gray-400;
  }

  /* #endregion */

  /* #region headings — h1, h2, h3... */

  & :where(h1, h2, h3, h4, h5, h6) {
    margin-top: 1.5rem;
    margin-bottom: 1.5rem;

    font: 555 1em var(--sans);

    &::before {
      @apply text-gray-400 dark:text-gray-600;
    }
  }

  & > h1::before {
    content: "# ";
  }
  & > h2::before {
    content: "## ";
  }
  & > h3::before {
    content: "### ";
  }

  /* #endregion */

  /* #region code snippets — code and pre */

  & code {
    @apply font-mono;
    /* We decrease letter spacing to make inline code stand out less from the
       surrounding text. */
    letter-spacing: -0.02em;
    font-size: 0.97em;

    &::before,
    &::after {
      @apply text-gray-400 dark:text-gray-600 font-black;
      content: "`";
    }
  }

  & pre {
    @apply md:rounded-md text-sm -mx-4 p-4 overflow-x-auto;

    /* Needed to fit 80 monospaced characters with Fira Code in 43rem space. */
    padding-right: calc(1rem - 1px);

    tab-size: 2;

    & code {
      /* Reset letter-spacing that was increased above in `.zaduma-prose code`. */
      letter-spacing: unset;
      font-size: 1em;

      &::before,
      &::after {
        content: "";
      }
    }
  }

  /* #endregion */

  /* #region table */

  & table {
    border-collapse: collapse;
    table-layout: fixed;
  }

  & thead {
    @apply border-b dark:border-gray-700;
  }

  & th {
    text-align: left;
  }

  & th,
  & td {
    @apply py-1 px-2 md:px-4;
  }

  /* #endregion table */

  /* #region images */

  & img {
    @apply dark:opacity-80;
    transform: translateX(-50%);
    margin-left: 50%;
    max-width: var(--wide-content-width);
  }

  & .zaduma-image-link {
    @apply inline-block;
    max-width: unset;
    transform: translateX(calc((100% - var(--container-width)) / -2));
  }

  /* #endregion images */
}

/* Introduced in src/build-time/asidesPlugin.ts */
.zaduma-aside {
  --aside-width: 20rem;
  --gap: 1rem;
  --divider-width: 1px;

  display: flex;
  flex-wrap: wrap;
  width: calc(100% + var(--aside-width) + var(--gap) + var(--divider-width));
  max-width: 100vw;

  & > :first-child {
    @apply flex-shrink-0 flex-grow max-w-container w-full;
  }

  & > aside {
    @apply flex-shrink-0 flex-grow relative h-min text-sm;
    width: var(--aside-width);
    padding-left: var(--gap);

    &::before {
      content: "";
      @apply border-l absolute h-full -left-px dark:border-gray-700;
    }
  }

  @media (max-width: 1280px) {
    & {
      width: 100%;
    }

    & > aside {
      margin-top: var(--block-mb);

      &::before {
        /* The left border of `aside` will always be positioned inside of the
           prose container. */
        @apply left-0;
      }
    }
  }
}
